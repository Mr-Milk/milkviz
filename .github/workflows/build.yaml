name: Build

on: [push, pull_request]

jobs:
  Test_Installation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.2'
      - name: Install dependencies
        run: poetry install
      - name: Build and check
        run: poetry build
      - name: Publish dry run
        run: poetry publish --dry-run --skip-existing
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

      - name: Publish to pypi
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        run: poetry publish --skip-existing
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
